language: rust
rust:
  - stable
  - beta
  - nightly

before_script:
  - |
    if [[ "$TRAVIS_RUST_VERSION" == stable && "$TRAVIS_OS_NAME" = "linux" ]]; then
      rustup component add clippy
      rustup component add rustfmt
      cargo fmt -- --check
      cargo clippy --all --bins --examples --tests -- -Wclippy::all -Dwarnings
    fi

script:
  - cargo build --verbose --no-default-features
  - cargo test --no-run --verbose --no-default-features
  - cargo build --verbose --features "use-socketcan"
  - cargo test --verbose --features "use-socketcan"

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

after_success:
  # Coverage report
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
        wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
        tar xzf master.tar.gz &&
        cd kcov-master &&
        mkdir build &&
        cd build &&
        cmake .. &&
        make &&
        sudo make install &&
        cd ../.. &&
        rm -rf kcov-master &&
        for file in target/debug/canparse-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        for file in target/debug/pgnlibrary-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        bash <(curl -s https://codecov.io/bash) &&
        echo "Uploaded code coverage"
      fi

